package ${package}.${moduleName}.controller;


import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import com.yanlaoge.mall.common.core.result.Result;
import com.yanlaoge.mall.common.web.base.BaseController;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Api(tags = "${comments}管理接口-ruby")
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller extends BaseController {
    @Resource
    private ${className}Service ${classname}Service;

    @ApiOperation("${comments}分页")
    @PostMapping("/page")
    public Result<IPage<${className}Entity>> page(@RequestBody Page<${className}Entity> page) {
        return ok(${classname}Service.page(page));
    }

    @ApiOperation("${comments}列表")
    @GetMapping("/list")
    public Result<List<${className}Entity>> list() {
        return ok(${classname}Service.list());
    }

    @ApiOperation("${comments}详情")
    @GetMapping("/info/{id}")
    @ApiImplicitParam(name = "id", value = "${comments}id", paramType = "path", dataType = "Long")
    public Result<${className}Entity> detail(@PathVariable Integer id) {
        return ok(${classname}Service.getById(id));
    }

    @ApiOperation("新增${comments}")
    @PostMapping("/save")
    public Result<Boolean> add(@RequestBody ${className}Entity form) {
        return ok(${classname}Service.save(form));
    }

    @ApiOperation("修改${comments}")
    @PostMapping("/update")
    public Result<Boolean> update(@RequestBody ${className}Entity form) {
        return ok(${classname}Service.updateById(form));
    }

    @ApiOperation("删除${comments}")
    @PostMapping("/delete/{id}")
    @ApiImplicitParam(name = "id", value = "${comments}id", paramType = "path", dataType = "Long")
    public Result<Boolean> delete(@PathVariable("id") Long id) {
        return ok(${classname}Service.removeById(id));
    }

}
